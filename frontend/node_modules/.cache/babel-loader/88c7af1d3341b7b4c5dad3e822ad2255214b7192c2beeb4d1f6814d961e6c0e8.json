{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kashif\\\\clinic-management-system\\\\frontend\\\\src\\\\pages\\\\AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ArrowLeft, Save, Calendar, Clock, User, Stethoscope } from 'lucide-react';\nimport { appointmentAPI, patientAPI, doctorAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const isEdit = Boolean(id);\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(isEdit);\n  const [patients, setPatients] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [patientSearch, setPatientSearch] = useState('');\n  const [doctorSearch, setDoctorSearch] = useState('');\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [showPatientDropdown, setShowPatientDropdown] = useState(false);\n  const [showDoctorDropdown, setShowDoctorDropdown] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const doctorInputRef = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    watch\n  } = useForm();\n  const watchedDoctor = watch('doctor');\n  const watchedDate = watch('appointmentDate');\n  useEffect(() => {\n    fetchInitialData();\n    if (isEdit) {\n      fetchAppointment();\n    } else {\n      // set defaults for new appointment\n      const today = new Date();\n      const dateStr = today.toISOString().slice(0, 10);\n      const timeStr = `${String(today.getHours()).padStart(2, '0')}:${String(today.getMinutes()).padStart(2, '0')}`;\n      reset({\n        appointmentDate: dateStr,\n        appointmentTime: timeStr,\n        duration: 15,\n        type: 'consultation',\n        reason: 'Not Mentioned',\n        amount: '',\n        paymentOnline: 0,\n        paymentOffline: 0\n      });\n    }\n  }, [id]);\n  useEffect(() => {\n    if (watchedDoctor && watchedDate) {\n      fetchAvailableSlots();\n    }\n  }, [watchedDoctor, watchedDate]);\n  const fetchInitialData = async () => {\n    try {\n      const [patientsRes, doctorsRes] = await Promise.all([patientAPI.getAll({\n        limit: 1000\n      }), doctorAPI.getAll({\n        limit: 1000\n      })]);\n      setPatients(patientsRes.data.data);\n      setDoctors(doctorsRes.data.data);\n      setFilteredPatients(patientsRes.data.data);\n      setFilteredDoctors(doctorsRes.data.data);\n    } catch (error) {\n      toast.error('Failed to fetch data');\n      console.error('Error fetching initial data:', error);\n    }\n  };\n  const fetchAppointment = async () => {\n    try {\n      var _appointment$amount, _appointment$paymentO, _appointment$paymentO2;\n      setInitialLoading(true);\n      const response = await appointmentAPI.getById(id);\n      const appointment = response.data.data;\n      const patientName = `${appointment.patient.firstName} ${appointment.patient.lastName}`;\n      const doctorName = `Dr. ${appointment.doctor.user.firstName} ${appointment.doctor.user.lastName}`;\n      setPatientSearch(patientName);\n      setDoctorSearch(doctorName);\n      reset({\n        patient: appointment.patient._id,\n        doctor: appointment.doctor._id,\n        appointmentDate: appointment.appointmentDate.split('T')[0],\n        appointmentTime: appointment.appointmentTime,\n        duration: appointment.duration,\n        type: appointment.type,\n        reason: appointment.reason,\n        notes: appointment.notes || '',\n        amount: (_appointment$amount = appointment.amount) !== null && _appointment$amount !== void 0 ? _appointment$amount : '',\n        paymentOnline: (_appointment$paymentO = appointment.paymentOnline) !== null && _appointment$paymentO !== void 0 ? _appointment$paymentO : 0,\n        paymentOffline: (_appointment$paymentO2 = appointment.paymentOffline) !== null && _appointment$paymentO2 !== void 0 ? _appointment$paymentO2 : 0\n      });\n      setSelectedDoctor(appointment.doctor);\n    } catch (error) {\n      toast.error('Failed to fetch appointment details');\n      console.error('Error fetching appointment:', error);\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n  const fetchAvailableSlots = async () => {\n    if (!watchedDoctor || !watchedDate) return;\n    try {\n      const response = await appointmentAPI.getDoctorAvailability(watchedDoctor, watchedDate);\n      setAvailableSlots(response.data.data.availableSlots || []);\n    } catch (error) {\n      console.error('Error fetching available slots:', error);\n      setAvailableSlots([]);\n    }\n  };\n  const handlePatientSearch = e => {\n    const value = e.target.value;\n    setPatientSearch(value);\n    setShowPatientDropdown(true);\n    const filtered = patients.filter(patient => `${patient.firstName} ${patient.lastName} ${patient.email}`.toLowerCase().includes(value.toLowerCase()));\n    setFilteredPatients(filtered);\n  };\n  const handleDoctorSearch = e => {\n    const value = e.target.value;\n    setDoctorSearch(value);\n    setShowDoctorDropdown(true);\n    const filtered = doctors.filter(doctor => `${doctor.user.firstName} ${doctor.user.lastName} ${doctor.specialization}`.toLowerCase().includes(value.toLowerCase()));\n    setFilteredDoctors(filtered);\n  };\n  const selectPatient = patient => {\n    setPatientSearch(`${patient.firstName} ${patient.lastName}`);\n    reset({\n      ...watch(),\n      patient: patient._id\n    });\n    setShowPatientDropdown(false);\n  };\n  const selectDoctor = doctor => {\n    setDoctorSearch(`Dr. ${doctor.user.firstName} ${doctor.user.lastName}`);\n    setSelectedDoctor(doctor);\n    if (!isEdit) {\n      var _doctor$consultationF, _doctor$consultationF2;\n      reset({\n        ...watch(),\n        doctor: doctor._id,\n        amount: (_doctor$consultationF = doctor.consultationFee) !== null && _doctor$consultationF !== void 0 ? _doctor$consultationF : '',\n        paymentOnline: 0,\n        paymentOffline: (_doctor$consultationF2 = doctor.consultationFee) !== null && _doctor$consultationF2 !== void 0 ? _doctor$consultationF2 : 0\n      });\n    } else {\n      var _doctor$consultationF3;\n      // Update amount to new doctor's fee on edit; leave existing paid values as-is\n      const existingPaid = {\n        paymentOnline: watch('paymentOnline'),\n        paymentOffline: watch('paymentOffline')\n      };\n      reset({\n        ...watch(),\n        doctor: doctor._id,\n        amount: (_doctor$consultationF3 = doctor.consultationFee) !== null && _doctor$consultationF3 !== void 0 ? _doctor$consultationF3 : watch('amount'),\n        ...existingPaid\n      });\n    }\n    // Blur the doctor input to close dropdown\n    if (doctorInputRef.current) doctorInputRef.current.blur();\n  };\n  const onSubmit = async data => {\n    try {\n      setLoading(true);\n      // Ensure amount is set to doctor fee if missing\n      if (!data.amount || Number(data.amount) <= 0) {\n        if (selectedDoctor && typeof selectedDoctor.consultationFee !== 'undefined') {\n          data.amount = selectedDoctor.consultationFee;\n        }\n      }\n      // On create: if no payment provided, default offline = amount\n      if (!isEdit) {\n        const online = Number(data.paymentOnline || 0);\n        const offline = Number(data.paymentOffline || 0);\n        if (online <= 0 && offline <= 0 && data.amount) {\n          data.paymentOffline = Number(data.amount);\n        }\n      }\n      // Always coerce numeric fields to numbers so backend recomputes status\n      data.amount = Number(data.amount || 0);\n      data.paymentOnline = Number(data.paymentOnline || 0);\n      data.paymentOffline = Number(data.paymentOffline || 0);\n      if (isEdit) {\n        await appointmentAPI.update(id, data);\n        toast.success('Appointment updated successfully');\n      } else {\n        await appointmentAPI.create(data);\n        toast.success('Appointment created successfully');\n      }\n      navigate('/appointments');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to save appointment';\n      toast.error(message);\n      console.error('Error saving appointment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (initialLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/appointments'),\n          className: \"mr-4 p-2 text-gray-400 hover:text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-gray-900\",\n            children: isEdit ? 'Edit Appointment' : 'Book New Appointment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: isEdit ? 'Update appointment details' : 'Schedule a new appointment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit(onSubmit),\n        disabled: loading,\n        className: \"btn-primary flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Save, {\n          className: \"h-5 w-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), loading ? 'Saving...' : 'Save Appointment']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"h-5 w-5 text-primary-600 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"Appointment Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Patient *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: patientSearch,\n              onChange: handlePatientSearch,\n              onFocus: () => setShowPatientDropdown(true),\n              className: \"input-field\",\n              placeholder: \"Search patient by name or email...\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register('patient', {\n                required: 'Patient is required'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), showPatientDropdown && filteredPatients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\",\n              children: filteredPatients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => selectPatient(patient),\n                className: \"px-4 py-2 cursor-pointer hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: [patient.firstName, \" \", patient.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500\",\n                  children: patient.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)]\n              }, patient._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), errors.patient && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-red-600\",\n              children: errors.patient.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Doctor *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: doctorInputRef,\n              type: \"text\",\n              value: doctorSearch,\n              onChange: handleDoctorSearch,\n              onFocus: () => setShowDoctorDropdown(true),\n              className: \"input-field\",\n              placeholder: \"Search doctor by name or specialization...\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register('doctor', {\n                required: 'Doctor is required'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), showDoctorDropdown && filteredDoctors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\",\n              children: filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => selectDoctor(doctor),\n                className: \"px-4 py-2 cursor-pointer hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: [\"Dr. \", doctor.user.firstName, \" \", doctor.user.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500\",\n                  children: doctor.specialization\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)]\n              }, doctor._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), errors.doctor && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-red-600\",\n              children: errors.doctor.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Appointment Date *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('appointmentDate', {\n                required: 'Appointment date is required'\n              }),\n              type: \"date\",\n              className: \"input-field\",\n              min: new Date().toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), errors.appointmentDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-red-600\",\n              children: errors.appointmentDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Appointment Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), availableSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register('appointmentTime', {\n                required: 'Appointment time is required'\n              }),\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select available time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot,\n                children: slot\n              }, slot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('appointmentTime', {\n                required: 'Appointment time is required'\n              }),\n              type: \"time\",\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), errors.appointmentTime && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-red-600\",\n              children: errors.appointmentTime.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Duration (minutes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register('duration'),\n              className: \"input-field\",\n              defaultValue: \"15\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"15\",\n                children: \"15 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"45\",\n                children: \"45 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"60\",\n                children: \"60 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"90\",\n                children: \"90 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"120\",\n                children: \"120 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Appointment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register('type'),\n              className: \"input-field\",\n              defaultValue: \"consultation\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"consultation\",\n                children: \"Consultation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"follow-up\",\n                children: \"Follow-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"emergency\",\n                children: \"Emergency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"routine-checkup\",\n                children: \"Routine Checkup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"vaccination\",\n                children: \"Vaccination\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Reason for Appointment *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ...register('reason', {\n              required: 'Reason is required'\n            }),\n            rows: 3,\n            className: \"input-field\",\n            placeholder: \"Not Mentioned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), errors.reason && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-600\",\n            children: errors.reason.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Additional Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ...register('notes'),\n            rows: 3,\n            className: \"input-field\",\n            placeholder: \"Any additional notes or special requirements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Stethoscope, {\n            className: \"h-5 w-5 text-primary-600 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Consultation Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field bg-gray-50\",\n              children: typeof (selectedDoctor === null || selectedDoctor === void 0 ? void 0 : selectedDoctor.consultationFee) !== 'undefined' ? selectedDoctor.consultationFee : watch('amount') || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register('amount')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Paid Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              ...register('paymentOnline'),\n              className: \"input-field\",\n              placeholder: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Paid Offline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              ...register('paymentOffline'),\n              className: \"input-field\",\n              placeholder: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentForm, \"gjMlC2m+t/JWwdAtp2ldFhulIQM=\", false, function () {\n  return [useParams, useNavigate, useForm];\n});\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","useForm","ArrowLeft","Save","Calendar","Clock","User","Stethoscope","appointmentAPI","patientAPI","doctorAPI","toast","jsxDEV","_jsxDEV","AppointmentForm","_s","id","navigate","isEdit","Boolean","loading","setLoading","initialLoading","setInitialLoading","patients","setPatients","doctors","setDoctors","availableSlots","setAvailableSlots","patientSearch","setPatientSearch","doctorSearch","setDoctorSearch","filteredPatients","setFilteredPatients","filteredDoctors","setFilteredDoctors","showPatientDropdown","setShowPatientDropdown","showDoctorDropdown","setShowDoctorDropdown","selectedDoctor","setSelectedDoctor","doctorInputRef","register","handleSubmit","formState","errors","reset","watch","watchedDoctor","watchedDate","fetchInitialData","fetchAppointment","today","Date","dateStr","toISOString","slice","timeStr","String","getHours","padStart","getMinutes","appointmentDate","appointmentTime","duration","type","reason","amount","paymentOnline","paymentOffline","fetchAvailableSlots","patientsRes","doctorsRes","Promise","all","getAll","limit","data","error","console","_appointment$amount","_appointment$paymentO","_appointment$paymentO2","response","getById","appointment","patientName","patient","firstName","lastName","doctorName","doctor","user","_id","split","notes","getDoctorAvailability","handlePatientSearch","e","value","target","filtered","filter","email","toLowerCase","includes","handleDoctorSearch","specialization","selectPatient","selectDoctor","_doctor$consultationF","_doctor$consultationF2","consultationFee","_doctor$consultationF3","existingPaid","current","blur","onSubmit","Number","online","offline","update","success","create","_error$response","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","onFocus","placeholder","autoComplete","required","length","map","ref","min","slot","defaultValue","rows","step","_c","$RefreshReg$"],"sources":["C:/Users/Kashif/clinic-management-system/frontend/src/pages/AppointmentForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ArrowLeft, Save, Calendar, Clock, User, Stethoscope } from 'lucide-react';\nimport { appointmentAPI, patientAPI, doctorAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AppointmentForm = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const isEdit = Boolean(id);\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(isEdit);\n  const [patients, setPatients] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [patientSearch, setPatientSearch] = useState('');\n  const [doctorSearch, setDoctorSearch] = useState('');\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [showPatientDropdown, setShowPatientDropdown] = useState(false);\n  const [showDoctorDropdown, setShowDoctorDropdown] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const doctorInputRef = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    watch,\n  } = useForm();\n\n  const watchedDoctor = watch('doctor');\n  const watchedDate = watch('appointmentDate');\n\n  useEffect(() => {\n    fetchInitialData();\n    if (isEdit) {\n      fetchAppointment();\n    } else {\n      // set defaults for new appointment\n      const today = new Date();\n      const dateStr = today.toISOString().slice(0,10);\n      const timeStr = `${String(today.getHours()).padStart(2,'0')}:${String(today.getMinutes()).padStart(2,'0')}`;\n      reset({\n        appointmentDate: dateStr,\n        appointmentTime: timeStr,\n        duration: 15,\n        type: 'consultation',\n        reason: 'Not Mentioned',\n        amount: '',\n        paymentOnline: 0,\n        paymentOffline: 0,\n      });\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (watchedDoctor && watchedDate) {\n      fetchAvailableSlots();\n    }\n  }, [watchedDoctor, watchedDate]);\n\n  const fetchInitialData = async () => {\n    try {\n      const [patientsRes, doctorsRes] = await Promise.all([\n        patientAPI.getAll({ limit: 1000 }),\n        doctorAPI.getAll({ limit: 1000 })\n      ]);\n      setPatients(patientsRes.data.data);\n      setDoctors(doctorsRes.data.data);\n      setFilteredPatients(patientsRes.data.data);\n      setFilteredDoctors(doctorsRes.data.data);\n    } catch (error) {\n      toast.error('Failed to fetch data');\n      console.error('Error fetching initial data:', error);\n    }\n  };\n\n  const fetchAppointment = async () => {\n    try {\n      setInitialLoading(true);\n      const response = await appointmentAPI.getById(id);\n      const appointment = response.data.data;\n      \n      const patientName = `${appointment.patient.firstName} ${appointment.patient.lastName}`;\n      const doctorName = `Dr. ${appointment.doctor.user.firstName} ${appointment.doctor.user.lastName}`;\n      \n      setPatientSearch(patientName);\n      setDoctorSearch(doctorName);\n      \n      reset({\n        patient: appointment.patient._id,\n        doctor: appointment.doctor._id,\n        appointmentDate: appointment.appointmentDate.split('T')[0],\n        appointmentTime: appointment.appointmentTime,\n        duration: appointment.duration,\n        type: appointment.type,\n        reason: appointment.reason,\n        notes: appointment.notes || '',\n        amount: appointment.amount ?? '',\n        paymentOnline: appointment.paymentOnline ?? 0,\n        paymentOffline: appointment.paymentOffline ?? 0,\n      });\n      setSelectedDoctor(appointment.doctor);\n    } catch (error) {\n      toast.error('Failed to fetch appointment details');\n      console.error('Error fetching appointment:', error);\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n\n  const fetchAvailableSlots = async () => {\n    if (!watchedDoctor || !watchedDate) return;\n    \n    try {\n      const response = await appointmentAPI.getDoctorAvailability(watchedDoctor, watchedDate);\n      setAvailableSlots(response.data.data.availableSlots || []);\n    } catch (error) {\n      console.error('Error fetching available slots:', error);\n      setAvailableSlots([]);\n    }\n  };\n\n  const handlePatientSearch = (e) => {\n    const value = e.target.value;\n    setPatientSearch(value);\n    setShowPatientDropdown(true);\n    \n    const filtered = patients.filter(patient =>\n      `${patient.firstName} ${patient.lastName} ${patient.email}`\n        .toLowerCase()\n        .includes(value.toLowerCase())\n    );\n    setFilteredPatients(filtered);\n  };\n\n  const handleDoctorSearch = (e) => {\n    const value = e.target.value;\n    setDoctorSearch(value);\n    setShowDoctorDropdown(true);\n    \n    const filtered = doctors.filter(doctor =>\n      `${doctor.user.firstName} ${doctor.user.lastName} ${doctor.specialization}`\n        .toLowerCase()\n        .includes(value.toLowerCase())\n    );\n    setFilteredDoctors(filtered);\n  };\n\n  const selectPatient = (patient) => {\n    setPatientSearch(`${patient.firstName} ${patient.lastName}`);\n    reset({ ...watch(), patient: patient._id });\n    setShowPatientDropdown(false);\n  };\n  const selectDoctor = (doctor) => {\n    setDoctorSearch(`Dr. ${doctor.user.firstName} ${doctor.user.lastName}`);\n    setSelectedDoctor(doctor);\n    if (!isEdit) {\n      reset({ ...watch(), doctor: doctor._id, amount: doctor.consultationFee ?? '', paymentOnline: 0, paymentOffline: doctor.consultationFee ?? 0 });\n    } else {\n      // Update amount to new doctor's fee on edit; leave existing paid values as-is\n      const existingPaid = {\n        paymentOnline: watch('paymentOnline'),\n        paymentOffline: watch('paymentOffline'),\n      };\n      reset({ ...watch(), doctor: doctor._id, amount: doctor.consultationFee ?? watch('amount'), ...existingPaid });\n    }\n    // Blur the doctor input to close dropdown\n    if (doctorInputRef.current) doctorInputRef.current.blur();\n  };\n  \n  const onSubmit = async (data) => {\n    try {\n      setLoading(true);\n      // Ensure amount is set to doctor fee if missing\n      if (!data.amount || Number(data.amount) <= 0) {\n        if (selectedDoctor && typeof selectedDoctor.consultationFee !== 'undefined') {\n          data.amount = selectedDoctor.consultationFee;\n        }\n      }\n      // On create: if no payment provided, default offline = amount\n      if (!isEdit) {\n        const online = Number(data.paymentOnline || 0);\n        const offline = Number(data.paymentOffline || 0);\n        if (online <= 0 && offline <= 0 && data.amount) {\n          data.paymentOffline = Number(data.amount);\n        }\n      }\n      // Always coerce numeric fields to numbers so backend recomputes status\n      data.amount = Number(data.amount || 0);\n      data.paymentOnline = Number(data.paymentOnline || 0);\n      data.paymentOffline = Number(data.paymentOffline || 0);\n\n      if (isEdit) {\n        await appointmentAPI.update(id, data);\n        toast.success('Appointment updated successfully');\n      } else {\n        await appointmentAPI.create(data);\n        toast.success('Appointment created successfully');\n      }\n      \n      navigate('/appointments');\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to save appointment';\n      toast.error(message);\n      console.error('Error saving appointment:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (initialLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <button\n            onClick={() => navigate('/appointments')}\n            className=\"mr-4 p-2 text-gray-400 hover:text-gray-600\"\n          >\n            <ArrowLeft className=\"h-5 w-5\" />\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              {isEdit ? 'Edit Appointment' : 'Book New Appointment'}\n            </h1>\n            <p className=\"text-gray-600\">\n              {isEdit ? 'Update appointment details' : 'Schedule a new appointment'}\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={handleSubmit(onSubmit)}\n          disabled={loading}\n          className=\"btn-primary flex items-center\"\n        >\n          <Save className=\"h-5 w-5 mr-2\" />\n          {loading ? 'Saving...' : 'Save Appointment'}\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        {/* Appointment Details */}\n        <div className=\"card\">\n          <div className=\"flex items-center mb-4\">\n            <Calendar className=\"h-5 w-5 text-primary-600 mr-2\" />\n            <h2 className=\"text-lg font-medium text-gray-900\">Appointment Details</h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"form-group relative\">\n              <label className=\"form-label\">Patient *</label>\n              <input\n                type=\"text\"\n                value={patientSearch}\n                onChange={handlePatientSearch}\n                onFocus={() => setShowPatientDropdown(true)}\n                className=\"input-field\"\n                placeholder=\"Search patient by name or email...\"\n                autoComplete=\"off\"\n              />\n              <input\n                type=\"hidden\"\n                {...register('patient', { required: 'Patient is required' })}\n              />\n              {showPatientDropdown && filteredPatients.length > 0 && (\n                <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\">\n                  {filteredPatients.map((patient) => (\n                    <div\n                      key={patient._id}\n                      onClick={() => selectPatient(patient)}\n                      className=\"px-4 py-2 cursor-pointer hover:bg-gray-100\"\n                    >\n                      <div className=\"font-medium\">{patient.firstName} {patient.lastName}</div>\n                      <div className=\"text-sm text-gray-500\">{patient.email}</div>\n                    </div>\n                  ))}\n                </div>\n              )}\n              {errors.patient && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.patient.message}</p>\n              )}\n            </div>\n\n            <div className=\"form-group relative\">\n              <label className=\"form-label\">Doctor *</label>\n              <input\n                ref={doctorInputRef}\n                type=\"text\"\n                value={doctorSearch}\n                onChange={handleDoctorSearch}\n                onFocus={() => setShowDoctorDropdown(true)}\n                className=\"input-field\"\n                placeholder=\"Search doctor by name or specialization...\"\n                autoComplete=\"off\"\n              />\n              <input\n                type=\"hidden\"\n                {...register('doctor', { required: 'Doctor is required' })}\n              />\n              {showDoctorDropdown && filteredDoctors.length > 0 && (\n                <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\">\n                  {filteredDoctors.map((doctor) => (\n                    <div\n                      key={doctor._id}\n                      onClick={() => selectDoctor(doctor)}\n                      className=\"px-4 py-2 cursor-pointer hover:bg-gray-100\"\n                    >\n                      <div className=\"font-medium\">Dr. {doctor.user.firstName} {doctor.user.lastName}</div>\n                      <div className=\"text-sm text-gray-500\">{doctor.specialization}</div>\n                    </div>\n                  ))}\n                </div>\n              )}\n              {errors.doctor && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.doctor.message}</p>\n              )}\n            </div>\n\n            \n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Appointment Date *</label>\n              <input\n                {...register('appointmentDate', { required: 'Appointment date is required' })}\n                type=\"date\"\n                className=\"input-field\"\n                min={new Date().toISOString().split('T')[0]}\n              />\n              {errors.appointmentDate && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.appointmentDate.message}</p>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Appointment Time *</label>\n              {availableSlots.length > 0 ? (\n                <select\n                  {...register('appointmentTime', { required: 'Appointment time is required' })}\n                  className=\"input-field\"\n                >\n                  <option value=\"\">Select available time</option>\n                  {availableSlots.map((slot) => (\n                    <option key={slot} value={slot}>\n                      {slot}\n                    </option>\n                  ))}\n                </select>\n              ) : (\n                <input\n                  {...register('appointmentTime', { required: 'Appointment time is required' })}\n                  type=\"time\"\n                  className=\"input-field\"\n                />\n              )}\n              {errors.appointmentTime && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.appointmentTime.message}</p>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Duration (minutes)</label>\n              <select\n                {...register('duration')}\n                className=\"input-field\"\n                defaultValue=\"15\"\n              >\n                <option value=\"15\">15 minutes</option>\n                <option value=\"30\">30 minutes</option>\n                <option value=\"45\">45 minutes</option>\n                <option value=\"60\">60 minutes</option>\n                <option value=\"90\">90 minutes</option>\n                <option value=\"120\">120 minutes</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Appointment Type</label>\n              <select\n                {...register('type')}\n                className=\"input-field\"\n                defaultValue=\"consultation\"\n              >\n                <option value=\"consultation\">Consultation</option>\n                <option value=\"follow-up\">Follow-up</option>\n                <option value=\"emergency\">Emergency</option>\n                <option value=\"routine-checkup\">Routine Checkup</option>\n                <option value=\"vaccination\">Vaccination</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Reason for Appointment *</label>\n            <textarea\n              {...register('reason', { required: 'Reason is required' })}\n              rows={3}\n              className=\"input-field\"\n              placeholder=\"Not Mentioned\"\n            />\n            {errors.reason && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.reason.message}</p>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Additional Notes</label>\n            <textarea\n              {...register('notes')}\n              rows={3}\n              className=\"input-field\"\n              placeholder=\"Any additional notes or special requirements\"\n            />\n          </div>\n        </div>\n\n        {/* Payment Details */}\n        <div className=\"card\">\n          <div className=\"flex items-center mb-4\">\n            <Stethoscope className=\"h-5 w-5 text-primary-600 mr-2\" />\n            <h2 className=\"text-lg font-medium text-gray-900\">Payment</h2>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"form-group\">\n              <label className=\"form-label\">Consultation Fee</label>\n              <div className=\"input-field bg-gray-50\">\n                {typeof selectedDoctor?.consultationFee !== 'undefined' ? selectedDoctor.consultationFee : (watch('amount') || '-')}\n              </div>\n              {/* keep amount submitted via hidden input */}\n              <input type=\"hidden\" {...register('amount')} />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Paid Online</label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                {...register('paymentOnline')}\n                className=\"input-field\"\n                placeholder=\"0\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Paid Offline</label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                {...register('paymentOffline')}\n                className=\"input-field\"\n                placeholder=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AppointmentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}